server:
  port: 8080

#Redis 配置
spring:
  redis:
    host: 127.0.0.1
    port: 6379
    database: 2
    password:
    timeout: 10000
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms


#自定义分布式 Redis 客户端 Redisson 配置
redisson:
  type: stand-alone  #redis服务器部署类型，stand-alone:单机部署、cluster：机器部署.默认为单机部署
  address: redis://127.0.0.1:6379 #redis服务器地址，单机时必须是redis://开头.
  database: 2





#演示用 @ConfigurationProperties + @Component 为 java bean 属性注入值
user:
  id: 1200
  lastName: 杨戬
  #  age: 110  #未配置时，对象属性会使用自己的默认值
  birthday: 2018/07/11
  colorList: #数组类型
    - red
    - yellow
    - green
  cityMap: {mapK1: mapV1,mapK2: mapV2}  #map类型
  #对象类型
  dog:
    id: 9527
    name: 哮天犬
    age: 100



#演示用 @ConfigurationProperties + @Bean为 java bean 属性注入值
person:
  id: 1301
  lastName: 二郎神
  #  age: 110  #未配置时，对象属性会使用自己的默认值
  birthday: 2018/07/11
  colorList: #数组类型
    - RED
    - yellow
    - GREEN
  cityMap: {mapK1: 长沙,mapK2: 深圳}  #map类型
  #对象类型
  dog:
    id: 9528
    name: 哮天犬
    age: 1088

#演示用 @ConfigurationProperties + @EnableConfigurationProperties 为 java bean 属性注入值
staff:
  id: 2305
  lastName: 二郎真君
  #  age: 110  #未配置时，对象属性会使用自己的默认值
  birthday: 1918/07/11
  colorList: #数组类型
    - RED
    - YELLOW
    - GREEN
  cityMap: {mapK1: 长沙麓谷,mapK2: 深圳科技园}  #map类型
  #对象类型
  dog:
    id: 952823
    name: 哮天犬
    age: 1088121